version: "3.9"

services:
  kafka:
    image: bitnami/kafka:3.6.1-debian-11-r1
    container_name: kafka
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '0@kafka:9093'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://127.0.0.1:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      # We're only exposing the port for the listener EXTERNAL. When trying to
      # use PLAINTEXT, the clients will attempt to connect via the advertised
      # hostname "kafka" which is only resolvable from within the docker network.
      # Here is a list of errors you can encounter when trying to use PLAINTEXT
      # from your host machine, using `--bootstrap-server 127.0.0.1:9092`:
      #  - Failed to resolve 'kafka:9092': nodename nor servname provided
      #  - Error connecting to node kafka:9092
      #  - kafka: Name or service not known
      #  - unable to open connection to broker; addr: kafka:9092, broker: 0, err: dial tcp: lookup kafka: no such host
      # for the curious: https://www.confluent.io/blog/kafka-listeners-explained/
      - '127.0.0.1:9094:9094'
    healthcheck:
      test: "kafka-topics.sh --list --bootstrap-server kafka:9092"
      interval: 10s
      timeout: 3s
      retries: 5

  # This "container" is a workaround to pre-create topics
  # https://github.com/confluentinc/examples/blob/f854ac008952346ceaba0d1f1a352788f0572c74/microservices-orders/docker-compose.yml#L182-L215
  kafka-setup:
    image: bitnami/kafka:3.6.1-debian-11-r1
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      kafka:
        condition: service_started
    command: >
      bash -c '
        kafka-topics.sh --create --if-not-exists \
          --topic interesting-stuff \
          --partitions 3 --replication-factor 1 \
          --bootstrap-server kafka:9092
      '
